{"version":3,"sources":["scripts/notesState.js","scripts/categories.js","scripts/render.js","scripts/notes.js","scripts/main.js"],"names":["notesArr","id","createdAt","Date","content","category","datesMentioned","archived","module","exports","getNotesArr","setNotesArr","newNotesArr","length","forEach","note","push","categories","require","renderEditableInput","value","renderEditableSelect","options","selectedValue","selectOptions","map","option","join","renderNoteRow","row","document","createElement","innerHTML","toLocaleString","updateSummary","activeSummary","archivedSummary","countActive","filter","n","countArchived","summaryBody","getElementById","summary","archivedCount","find","item","appendChild","renderNotes","notesTableBody","archivedTableBody","hideErrorMessage","style","display","showErrorMessage","message","duration","errorMessage","textContent","setTimeout","extractDatesFromContent","match","addNote","noteContentInput","noteContent","trim","noteCategory","newNote","toggleArchive","noteId","deleteNote","filteredNotes","handleEditButtonClick","noteContentCell","querySelector","noteCategoryCell","classList","add","remove","handleSaveButtonClick","alert","handleCancelButtonClick","addEventListener","event","targetClassList","target","closest","parseInt","dataset","contains"],"mappings":";AAAA,aAEA,IAAMA,EAAW,CACf,CACEC,GAAI,EACJC,UAAW,IAAIC,KAAK,oBACpBC,QAAS,4BACTC,SAAU,OACVC,eAAgB,CAAC,aAAc,cAC/BC,UAAU,IAIdC,OAAOC,QAAU,CACfC,YAAa,WAAMV,OAAAA,GACnBW,YAAa,SAACC,GAILZ,OAHPA,EAASa,OAAS,EAClBD,EAAYE,QAAQ,SAACC,GAASf,OAAAA,EAASgB,KAAKD,KAErCf;;ACnBX,aAEA,IAAMiB,EAAa,CAAC,OAAQ,iBAAkB,QAE9CT,OAAOC,QAAU,CACfQ,WAAAA;;ACLF,aA8HA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA5HwBC,IAAAA,EAAAA,QAAQ,gBAAxBR,EAAAA,EAAAA,YACeQ,EAAAA,QAAQ,gBAAvBD,EAAAA,EAAAA,WAEFjB,EAAWU,IAEjB,SAASS,EAAoBC,GACSA,MAAAA,6BAAAA,OAAAA,EAApC,6BAGF,SAASC,EAAqBC,EAASC,GAC/BC,IAAAA,EAAgBF,EAAQG,IAAI,SAAAC,GACdA,MAAAA,kBAAAA,OAAAA,EAAUA,KAAAA,OAAAA,IAAWH,EACnC,YAAc,GAAMG,KAAAA,OAAAA,EAFc,eAGtCC,KAAK,IAEmCH,MAAAA,mCAAAA,OAAAA,EAA1C,aAGF,SAASI,EAAcb,GACfc,IAAAA,EAAMC,SAASC,cAAc,MA0C5BF,OAxCPA,EAAIG,UACIjB,aAAAA,OAAAA,EAAKb,UAAU+B,iBACKlB,uCAAAA,OAAAA,EAAKX,QACJW,wCAAAA,OAAAA,EAAKV,SAC1BU,mBAAAA,OAAAA,EAAKT,eAAeqB,KAAK,MAEVZ,4CAAAA,OAAAA,EAAKd,GACLc,2EAAAA,OAAAA,EAAKd,GAAqBc,oBAAAA,OAAAA,EAAKR,SACpD,aAAe,aAEbQ,uBAAAA,OAAAA,EAAKR,SAAW,YAAc,UAGjBQ,uDAAAA,OAAAA,EAAKd,GAQLc,+IAAAA,OAAAA,EAAKd,GASLc,+JAAAA,OAAAA,EAAKd,GA9BtB,4HAwCO4B,EAGT,SAASK,IACDC,IADiB,EACjBA,EAAgB,GAChBC,EAAkB,GAEDnB,EAAAA,EAAAA,GAJA,IAAA,IAAA,EAAA,WAIZZ,IAAAA,EAJY,EAAA,MAKfgC,EAAcrC,EACjBsC,OAAO,SAAAC,GAAKA,OAAAA,EAAElC,WAAaA,IAAakC,EAAEhC,WAAUM,OAEjD2B,EAAgBxC,EACnBsC,OAAO,SAAAC,GAAKA,OAAAA,EAAElC,WAAaA,GAAYkC,EAAEhC,WAAUM,OAEtDsB,EAAcnB,KAAK,CACjBX,SAAAA,EACAgC,YAAAA,IAGFD,EAAgBpB,KAAK,CACnBX,SAAAA,EACAmC,cAAAA,KAd+B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,IAJZ,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAsBjBC,IAAAA,EAAcX,SAASY,eAAe,eAE5CD,EAAYT,UAAY,GAEFG,IA1BC,IAAA,EAAA,WA0BZQ,IAAAA,EAAN,EAAA,GACGd,EAAMC,SAASC,cAAc,MAE7Ba,EAAgBR,EACnBS,KAAK,SAAAC,GAAQA,OAAAA,EAAKzC,WAAasC,EAAQtC,WAAUmC,eAAiB,EAErEX,EAAIG,UACIW,eAAAA,OAAAA,EAAQtC,SACRsC,qBAAAA,OAAAA,EAAQN,YACRO,qBAAAA,OAAAA,EAHR,eAMAH,EAAYM,YAAYlB,IAZJM,EAAAA,EAAAA,EAAAA,EAAe,EAAA,EAAA,OAAA,IAAA,IAgBvC,SAASa,IACDC,IAAAA,EAAiBnB,SAASY,eAAe,aACzCQ,EAAoBpB,SAASY,eAAe,gBAElDO,EAAejB,UAAY,GAC3BkB,EAAkBlB,UAAY,GAEXhC,IAPE,EAOFA,EAAAA,EAAAA,GAPE,IAOQ,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAlBe,IAAAA,EAAkB,EAAA,MACrBc,EAAMD,EAAcb,GAErBA,EAAKR,SAGR2C,EAAkBH,YAAYlB,GAF9BoB,EAAeF,YAAYlB,IAXV,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAkBvBrB,OAAOC,QAAU,CACfuC,YAAAA,EAAad,cAAAA,EAAef,oBAAAA,EAAqBE,qBAAAA;;AC/HnD,aAEqCH,IAAAA,EAAAA,QAAQ,gBAArCR,EAAAA,EAAAA,YAAaC,EAAAA,EAAAA,YACEO,EAAAA,QAAQ,gBAAvBD,EAAAA,EAAAA,WAImBC,EAAAA,QAAQ,YAH3B8B,EAAAA,EAAAA,YACNd,EAAAA,EAAAA,cACAf,EAAAA,EAAAA,oBACAE,EAAAA,EAAAA,qBAEIrB,EAAWU,IAEjB,SAASyC,IACcrB,SAASY,eAAe,aAEhCU,MAAMC,QAAU,OAG/B,SAASC,EAAiBC,EAASC,GAC3BC,IAAAA,EAAe3B,SAASY,eAAe,aAE7Ce,EAAaC,YAAcH,EAC3BE,EAAaL,MAAMC,QAAU,QAE7BM,WAAW,WACTR,KACCK,GAGL,SAASI,EAAwBxD,GAIxBA,OAAAA,EAAQyD,MAFG,+EAEiB,GAGrC,SAASC,IACDC,IAAAA,EAAmBjC,SAASY,eAAe,eAC3CsB,EAAclC,SAASY,eAAe,eAAetB,MAAM6C,OAC3DC,EAAepC,SAASY,eAAe,gBAAgBtB,MAEzD4C,GAAgB,KAAhBA,EAAAA,CAME1D,IAAAA,EAAiBsD,EAAwBI,GACzCG,EAAU,CACdlE,GAAID,EAASa,OAAS,EACtBX,UAAW,IAAIC,KACfC,QAAS4D,EACT3D,SAAU6D,EACV5D,eAAAA,EACAC,UAAU,GAGZP,EAASgB,KAAKmD,GAEdnB,IACAd,IACA6B,EAAiB3C,MAAQ,QAnBvBkC,EAAiB,uBAAwB,KAsB7C,SAASc,EAAcC,GACftD,IAAAA,EAAOf,EAAS6C,KAAK,SAAAN,GAAKA,OAAAA,EAAEtC,KAAOoE,IAErCtD,IACFA,EAAKR,UAAYQ,EAAKR,SACtByC,IACAd,KAIJ,SAASoC,EAAWD,GACZE,IAAAA,EAAgBvE,EAASsC,OAAO,SAACvB,GAC9BA,OAAAA,EAAKd,KAAOoE,IAGrB1D,EAAY4D,GACZvB,IACAd,IAGF,SAASsC,EAAsB3C,EAAKd,GAC5B0D,IAAAA,EAAkB5C,EAAI6C,cAAc,gBACpCC,EAAmB9C,EAAI6C,cAAc,iBACrCV,EAAcS,EAAgBf,YAC9BQ,EAAeS,EAAiBjB,YAEtCe,EAAgBzC,UAAYb,EAAoB6C,GAChDW,EAAiB3C,UAAYX,EAAqBJ,EAAYiD,GAE9DrC,EAAI6C,cAAc,YAAYE,UAAUC,IAAI,aAC5ChD,EAAI6C,cAAc,eAAeE,UAAUC,IAAI,aAC/ChD,EAAI6C,cAAc,cAAcE,UAAUC,IAAI,aAC9ChD,EAAI6C,cAAc,YAAYE,UAAUE,OAAO,aAC/CjD,EAAI6C,cAAc,cAAcE,UAAUE,OAAO,aAGnD,SAASC,EAAsBlD,EAAKd,GAC5BiD,IAAAA,EAAcnC,EAAI6C,cAAc,SAAStD,MAAM6C,OAC/CC,EAAerC,EAAI6C,cAAc,UAAUtD,MAE7B,KAAhB4C,GAOJjD,EAAKX,QAAU4D,EACfjD,EAAKV,SAAW6D,EAChBlB,KAPEgC,MAAM,wBAUV,SAASC,EAAwBpD,EAAKd,GAC9B0D,IAAAA,EAAkB5C,EAAI6C,cAAc,gBACpCC,EAAmB9C,EAAI6C,cAAc,iBAE3CD,EAAgBzC,UAAYjB,EAAKX,QACjCuE,EAAiB3C,UAAYjB,EAAKV,SAElCwB,EAAI6C,cAAc,YAAYE,UAAUC,IAAI,aAC5ChD,EAAI6C,cAAc,cAAcE,UAAUC,IAAI,aAC9ChD,EAAI6C,cAAc,YAAYE,UAAUE,OAAO,aAC/CjD,EAAI6C,cAAc,eAAeE,UAAUE,OAAO,aAClDjD,EAAI6C,cAAc,cAAcE,UAAUE,OAAO,aAGnDtE,OAAOC,QAAU,CACfqD,QAAAA,EACAM,cAAAA,EACAE,WAAAA,EACAE,sBAAAA,EACAO,sBAAAA,EACAE,wBAAAA;;ACvIF,aAEwB/D,IAAAA,EAAAA,QAAQ,gBAAxBR,EAAAA,EAAAA,YAEYQ,EAAAA,QAAQ,YADpB8B,EAAAA,EAAAA,YACNd,EAAAA,EAAAA,cAM4BhB,EAAAA,QAAQ,WAL9B4C,EAAAA,EAAAA,QACNM,EAAAA,EAAAA,cACAE,EAAAA,EAAAA,WACAE,EAAAA,EAAAA,sBACAO,EAAAA,EAAAA,sBACAE,EAAAA,EAAAA,wBAEIjF,EAAWU,IAEjBoB,SAASY,eAAe,cAAcwC,iBAAiB,QAASpB,GAEhEhC,SAASY,eAAe,OAAOwC,iBAAiB,QAAS,SAACC,GAClDC,IAAAA,EAAkBD,EAAME,OAAOT,UAC/B/C,EAAMsD,EAAME,OAAOC,QAAQ,MAC3BjB,EAASkB,SAASJ,EAAME,OAAOG,QAAQvF,IACvCc,EAAOf,EAAS6C,KAAK,SAAAN,GAAKA,OAAAA,EAAEtC,KAAOoE,IAErCe,EAAgBK,SAAS,eAC3BrB,EAAcC,GAGZe,EAAgBK,SAAS,cAC3BnB,EAAWD,GAGTe,EAAgBK,SAAS,YAC3BjB,EAAsB3C,EAAKd,GAGzBqE,EAAgBK,SAAS,YAC3BV,EAAsBlD,EAAKd,GAGzBqE,EAAgBK,SAAS,cAC3BR,EAAwBpD,EAAKd,KAIjCiC,IACAd","file":"main.4aa447ce.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst notesArr = [\n  {\n    id: 1,\n    createdAt: new Date('2023-07-01 10:00'),\n    content: 'Buy groceries for dinner.',\n    category: 'Task',\n    datesMentioned: ['2023-07-02', '2023-07-03'],\n    archived: false,\n  },\n];\n\nmodule.exports = {\n  getNotesArr: () => notesArr,\n  setNotesArr: (newNotesArr) => {\n    notesArr.length = 0;\n    newNotesArr.forEach((note) => notesArr.push(note));\n\n    return notesArr;\n  },\n};\n","'use strict';\n\nconst categories = ['Task', 'Random Thought', 'Idea'];\n\nmodule.exports = {\n  categories,\n};\n","'use strict';\n\nconst { getNotesArr } = require('./notesState');\nconst { categories } = require('./categories');\n\nconst notesArr = getNotesArr();\n\nfunction renderEditableInput(value) {\n  return `<input type=\"text\" value=\"${value}\" class=\"input is-small\">`;\n}\n\nfunction renderEditableSelect(options, selectedValue) {\n  const selectOptions = options.map(option =>\n    `<option value=\"${option}\"${option === selectedValue\n      ? ' selected' : ''}>${option}</option>`\n  ).join('');\n\n  return `<select class=\"select is-small\">${selectOptions}</select>`;\n}\n\nfunction renderNoteRow(note) {\n  const row = document.createElement('tr');\n\n  row.innerHTML = `\n    <td>${note.createdAt.toLocaleString()}</td>\n    <td class=\"noteContent\">${note.content}</td>\n    <td class=\"noteCategory\">${note.category}</td>\n    <td>${note.datesMentioned.join(', ')}</td>\n    <td>\n      <button data-id=\"${note.id}\" class=\"button is-info editBtn\">Edit</button>\n      <button data-id=\"${note.id}\" class=\"button ${note.archived\n  ? 'is-success' : 'is-warning'\n} archiveBtn\">\n    ${note.archived ? 'Unarchive' : 'Archive'}\n      </button>\n      <button\n        data-id=\"${note.id}\"\n        class=\"button\n        is-danger\n        deleteBtn\"\n      >\n        Delete\n      </button>\n      <button\n        data-id=\"${note.id}\"\n        class=\"button\n        is-primary\n        saveBtn\n        is-hidden\"\n      >\n        Save\n      </button>\n      <button\n        data-id=\"${note.id}\"\n        class=\"button\n        cancelBtn\n        is-hidden\"\n      >\n        Cancel\n      </button>\n    </td>\n  `;\n\n  return row;\n}\n\nfunction updateSummary() {\n  const activeSummary = [];\n  const archivedSummary = [];\n\n  for (const category of categories) {\n    const countActive = notesArr\n      .filter(n => n.category === category && !n.archived).length;\n\n    const countArchived = notesArr\n      .filter(n => n.category === category && n.archived).length;\n\n    activeSummary.push({\n      category,\n      countActive,\n    });\n\n    archivedSummary.push({\n      category,\n      countArchived,\n    });\n  }\n\n  const summaryBody = document.getElementById('summaryBody');\n\n  summaryBody.innerHTML = '';\n\n  for (const summary of activeSummary) {\n    const row = document.createElement('tr');\n\n    const archivedCount = archivedSummary\n      .find(item => item.category === summary.category).countArchived || 0;\n\n    row.innerHTML = `\n      <td>${summary.category}</td>\n      <td>${summary.countActive}</td>\n      <td>${archivedCount}</td>\n    `;\n\n    summaryBody.appendChild(row);\n  }\n}\n\nfunction renderNotes() {\n  const notesTableBody = document.getElementById('notesBody');\n  const archivedTableBody = document.getElementById('archivedBody');\n\n  notesTableBody.innerHTML = '';\n  archivedTableBody.innerHTML = '';\n\n  for (const note of notesArr) {\n    const row = renderNoteRow(note);\n\n    if (!note.archived) {\n      notesTableBody.appendChild(row);\n    } else {\n      archivedTableBody.appendChild(row);\n    }\n  }\n}\n\nmodule.exports = {\n  renderNotes, updateSummary, renderEditableInput, renderEditableSelect,\n};\n","'use strict';\n\nconst { getNotesArr, setNotesArr } = require('./notesState');\nconst { categories } = require('./categories');\nconst { renderNotes,\n  updateSummary,\n  renderEditableInput,\n  renderEditableSelect } = require('./render');\n\nconst notesArr = getNotesArr();\n\nfunction hideErrorMessage() {\n  const errorMessage = document.getElementById('noteError');\n\n  errorMessage.style.display = 'none';\n}\n\nfunction showErrorMessage(message, duration) {\n  const errorMessage = document.getElementById('noteError');\n\n  errorMessage.textContent = message;\n  errorMessage.style.display = 'block';\n\n  setTimeout(() => {\n    hideErrorMessage();\n  }, duration);\n}\n\nfunction extractDatesFromContent(content) {\n  // eslint-disable-next-line max-len\n  const dateRegex = /\\b\\d{1,2}\\/\\d{1,2}\\/\\d{4}\\b|\\b\\d{4}-\\d{2}-\\d{2}\\b|\\b\\d{2}\\.\\d{2}\\.\\d{4}\\b/g;\n\n  return content.match(dateRegex) || [];\n}\n\nfunction addNote() {\n  const noteContentInput = document.getElementById('noteContent');\n  const noteContent = document.getElementById('noteContent').value.trim();\n  const noteCategory = document.getElementById('noteCategory').value;\n\n  if (noteContent === '') {\n    showErrorMessage(\"Note can't be empty.\", 3000);\n\n    return;\n  }\n\n  const datesMentioned = extractDatesFromContent(noteContent);\n  const newNote = {\n    id: notesArr.length + 1,\n    createdAt: new Date(),\n    content: noteContent,\n    category: noteCategory,\n    datesMentioned,\n    archived: false,\n  };\n\n  notesArr.push(newNote);\n\n  renderNotes();\n  updateSummary();\n  noteContentInput.value = '';\n}\n\nfunction toggleArchive(noteId) {\n  const note = notesArr.find(n => n.id === noteId);\n\n  if (note) {\n    note.archived = !note.archived;\n    renderNotes();\n    updateSummary();\n  }\n}\n\nfunction deleteNote(noteId) {\n  const filteredNotes = notesArr.filter((note) => {\n    return note.id !== noteId;\n  });\n\n  setNotesArr(filteredNotes);\n  renderNotes();\n  updateSummary();\n}\n\nfunction handleEditButtonClick(row, note) {\n  const noteContentCell = row.querySelector('.noteContent');\n  const noteCategoryCell = row.querySelector('.noteCategory');\n  const noteContent = noteContentCell.textContent;\n  const noteCategory = noteCategoryCell.textContent;\n\n  noteContentCell.innerHTML = renderEditableInput(noteContent);\n  noteCategoryCell.innerHTML = renderEditableSelect(categories, noteCategory);\n\n  row.querySelector('.editBtn').classList.add('is-hidden');\n  row.querySelector('.archiveBtn').classList.add('is-hidden');\n  row.querySelector('.deleteBtn').classList.add('is-hidden');\n  row.querySelector('.saveBtn').classList.remove('is-hidden');\n  row.querySelector('.cancelBtn').classList.remove('is-hidden');\n}\n\nfunction handleSaveButtonClick(row, note) {\n  const noteContent = row.querySelector('input').value.trim();\n  const noteCategory = row.querySelector('select').value;\n\n  if (noteContent === '') {\n    // eslint-disable-next-line no-undef\n    alert(\"Note can't be empty.\");\n\n    return;\n  }\n\n  note.content = noteContent;\n  note.category = noteCategory;\n  renderNotes();\n}\n\nfunction handleCancelButtonClick(row, note) {\n  const noteContentCell = row.querySelector('.noteContent');\n  const noteCategoryCell = row.querySelector('.noteCategory');\n\n  noteContentCell.innerHTML = note.content;\n  noteCategoryCell.innerHTML = note.category;\n\n  row.querySelector('.saveBtn').classList.add('is-hidden');\n  row.querySelector('.cancelBtn').classList.add('is-hidden');\n  row.querySelector('.editBtn').classList.remove('is-hidden');\n  row.querySelector('.archiveBtn').classList.remove('is-hidden');\n  row.querySelector('.deleteBtn').classList.remove('is-hidden');\n}\n\nmodule.exports = {\n  addNote,\n  toggleArchive,\n  deleteNote,\n  handleEditButtonClick,\n  handleSaveButtonClick,\n  handleCancelButtonClick,\n};\n","'use strict';\n\nconst { getNotesArr } = require('./notesState');\nconst { renderNotes,\n  updateSummary } = require('./render');\nconst { addNote,\n  toggleArchive,\n  deleteNote,\n  handleEditButtonClick,\n  handleSaveButtonClick,\n  handleCancelButtonClick } = require('./notes');\n\nconst notesArr = getNotesArr();\n\ndocument.getElementById('addNoteBtn').addEventListener('click', addNote);\n\ndocument.getElementById('app').addEventListener('click', (event) => {\n  const targetClassList = event.target.classList;\n  const row = event.target.closest('tr');\n  const noteId = parseInt(event.target.dataset.id);\n  const note = notesArr.find(n => n.id === noteId);\n\n  if (targetClassList.contains('archiveBtn')) {\n    toggleArchive(noteId);\n  }\n\n  if (targetClassList.contains('deleteBtn')) {\n    deleteNote(noteId);\n  }\n\n  if (targetClassList.contains('editBtn')) {\n    handleEditButtonClick(row, note);\n  }\n\n  if (targetClassList.contains('saveBtn')) {\n    handleSaveButtonClick(row, note);\n  }\n\n  if (targetClassList.contains('cancelBtn')) {\n    handleCancelButtonClick(row, note);\n  }\n});\n\nrenderNotes();\nupdateSummary();\n"]}